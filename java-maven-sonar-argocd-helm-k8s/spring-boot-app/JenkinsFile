pipeline {
  agent any

  environment {
    SONAR_URL = "http://3.138.117.193:9000"
    GIT_REPO_NAME = "cap-2"
    GIT_USER_NAME = "patelraj-41299"
    DOCKER_IMAGE = "rajp41299/springboot-app:${BUILD_NUMBER}"
  }

  stages {
    stage('CI Pipeline') {
      steps {
        script {
          docker.image('rajp41299/maven-docker-agent:v1').inside('--user root -v /var/run/docker.sock:/var/run/docker.sock') {

            // Mark workspace as safe for Git
            sh 'git config --global --add safe.directory /var/lib/jenkins/workspace/cap-2'

            // === Build and Test ===
            sh '''
              cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
              mvn clean package
            '''

            // === Static Code Analysis ===
            withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
              sh '''
                cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                mvn org.sonarsource.scanner.maven:sonar-maven-plugin:4.0.0.4121:sonar \
                  -Dsonar.login=$SONAR_AUTH_TOKEN \
                  -Dsonar.host.url=$SONAR_URL
              '''
            }

            // === Build and Push Docker Image ===
            withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
              sh '''
                cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                docker build -t $DOCKER_IMAGE .
                echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                docker push $DOCKER_IMAGE
                docker logout
              '''
            }

            // === Update Deployment File ===
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
              sh '''
                git config --global user.email "rajpatel.rp.rp93@gmail.com"
                git config --global user.name "patelraj-41299"
                sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml || true
                git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
                git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
              '''
            }
          }
        }
      }
    }
  }
}
